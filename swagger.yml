swagger: "2.0"
info:
  title: training API
  description: kkk
  version: "1.0"
host: "petstore.swagger.io"
basePath: "/"

schemes:
  - "https"
  - "http"
paths:
  /training:
    post:
      tags:
        - "Training"
      summary: "Add a new training"
      description: ""
      operationId: "createTraining"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Training object that needs to be added "
          required: true
          schema:
            $ref: "#/definitions/Training"
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
    put:
      tags:
        - "Training"
      summary: "Update an existing training"
      description: ""
      operationId: "updateTraining"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Training object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/Training"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"

  /pet/{petId}:
    get:
      tags:
        - "Training"
      summary: "Find pet by ID"
      description: "Returns a single pet"
      operationId: "getPetById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "petId"
          in: "path"
          description: "ID of pet to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Training"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Training not found"
    post:
      tags:
        - "pet"
      summary: "Updates a pet in the store with form data"
      description: ""
      operationId: "addBook"
      consumes:
        - "application/x-www-form-urlencoded"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "petId"
          in: "path"
          description: "ID of pet that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
        - name: "name"
          in: "formData"
          description: "Updated name of the pet"
          required: false
          type: "string"
        - name: "status"
          in: "formData"
          description: "Updated status of the pet"
          required: false
          type: "string"
      responses:
        405:
          description: "Invalid input"

    delete:
      tags:
        - "Training"
      summary: "Deletes a pet"
      description: ""
      operationId: "deletePet"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "api_key"
          in: "header"
          required: false
          type: "string"
        - name: "petId"
          in: "path"
          description: "Pet id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"

definitions:
  Training:
    type: "object"
    required:
      - "trainingId"
      - "trainingName"
      - "trainingDescription"
      - "resourceName"
    properties:
      trainingId:
        type: "string"
        example: "1"
      trainingName:
        type: "string"
        example: "Node JS training"
      trainingDescription:
        type: "string"
        example: "Give a detailed desc of Node JS training"
      resourceName:
        type: "string"
        example: "mr Ganesh"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
